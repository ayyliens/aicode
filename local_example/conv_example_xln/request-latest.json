{
  "model": "gpt-4",
  "messages": [
    {
      "role": "function",
      "name": "read_files",
      "content": "{\"files\":[{\"name\":\"xln.go\",\"body\":\"package xln\\n\\nimport \\\"fmt\\\"\\n\\nvar LANGS = []string{LANG_EN}\\n\\nconst (\\n\\tLANG_DEFAULT = LANG_EN\\n\\tLANG_EN      = `en`\\n\\tLANG_FR      = `fr`\\n)\\n\\nvar XLN_INVALID_LONGITUDE = Xln[func(lon float64) string]{\\n\\tLANG_EN: func(lon float64) string { return fmt.Sprintf(`invalid longitude %v`, lon) },\\n\\tLANG_FR: func(lon float64) string { return fmt.Sprintf(`longitude invalide %v`, lon) },\\n}.ValidGet()\\n\\nvar XLN_INVALID_LATITUDE = Xln[func(lat float64) string]{\\n\\tLANG_EN: func(lat float64) string { return fmt.Sprintf(`invalid latitude %v`, lat) },\\n\\tLANG_FR: func(lat float64) string { return fmt.Sprintf(`latitude invalide %v`, lat) },\\n}.ValidGet()\\n\\nvar XLN_MISSING_GEOGRAPHIC_COORDINATES = XlnS{\\n\\tLANG_EN: `missing geographic coordinates`,\\n\\tLANG_FR: `coordonnées géographiques manquantes`,\\n}.ValidGet()\\n\\nvar XLN_CURRENCY_NOT_EQUALS = Xln[func(exp, got string) string]{\\n\\tLANG_EN: func(exp, got string) string {\\n\\t\\treturn fmt.Sprintf(`expected currency %q, got %q`, exp, got)\\n\\t},\\n\\tLANG_FR: func(exp, got string) string {\\n\\t\\treturn fmt.Sprintf(`devise attendue %q, obtenue %q`, exp, got)\\n\\t},\\n}.ValidGet()\\n\\nvar XLN_MISSING_CURRENCY = XlnS{\\n\\tLANG_EN: `missing currency`,\\n\\tLANG_FR: `devise manquante`,\\n}.ValidGet()\\n\\nvar XLN_CURRENCY_INVALID = Xln[func(currency string) string]{\\n\\tLANG_EN: func(currency string) string {\\n\\t\\treturn fmt.Sprintf(`%v doesn't appear to be a valid currency`, currency)\\n\\t},\\n\\tLANG_FR: func(currency string) string {\\n\\t\\treturn fmt.Sprintf(`%v ne semble pas être une devise valide`, currency)\\n\\t},\\n}.ValidGet()\\n\"}]}"
    },
    {
      "role": "user",
      "content": "The following files contain code that implements translation between multiple languages. Provide a list of files with rewritten code, adding support for Spanish.\n"
    },
    {
      "role": "assistant",
      "content": "",
      "function_call": {
        "name": "write_files",
        "arguments": "{\"files\":[{\"body\":\"package xln\\n\\nimport \\\"fmt\\\"\\n\\nvar LANGS = []string{LANG_EN, LANG_ES}\\n\\nconst (\\n\\tLANG_DEFAULT = LANG_EN\\n\\tLANG_EN      = `en`\\n\\tLANG_FR      = `fr`\\n\\tLANG_ES      = `es`\\n)\\n\\nvar XLN_INVALID_LONGITUDE = Xln[func(lon float64) string]{\\n\\tLANG_EN: func(lon float64) string { return fmt.Sprintf(`invalid longitude %v`, lon) },\\n\\tLANG_FR: func(lon float64) string { return fmt.Sprintf(`longitude invalide %v`, lon) },\\n\\tLANG_ES: func(lon float64) string { return fmt.Sprintf(`longitud inválida %v`, lon) },\\n}.ValidGet()\\n\\nvar XLN_INVALID_LATITUDE = Xln[func(lat float64) string]{\\n\\tLANG_EN: func(lat float64) string { return fmt.Sprintf(`invalid latitude %v`, lat) },\\n\\tLANG_FR: func(lat float64) string { return fmt.Sprintf(`latitude invalide %v`, lat) },\\n\\tLANG_ES: func(lat float64) string { return fmt.Sprintf(`latitud inválida %v`, lat) },\\n}.ValidGet()\\n\\nvar XLN_MISSING_GEOGRAPHIC_COORDINATES = XlnS{\\n\\tLANG_EN: `missing geographic coordinates`,\\n\\tLANG_FR: `coordonnées géographiques manquantes`,\\n\\tLANG_ES: `faltan coordenadas geográficas`,\\n}.ValidGet()\\n\\nvar XLN_CURRENCY_NOT_EQUALS = Xln[func(exp, got string) string]{\\n\\tLANG_EN: func(exp, got string) string {\\n\\t\\treturn fmt.Sprintf(`expected currency %q, got %q`, exp, got)\\n\\t},\\n\\tLANG_FR: func(exp, got string) string {\\n\\t\\treturn fmt.Sprintf(`devise attendue %q, obtenue %q`, exp, got)\\n\\t},\\n\\tLANG_ES: func(exp, got string) string {\\n\\t\\treturn fmt.Sprintf(`se esperaba la moneda %q, pero se obtuvo %q`, exp, got)\\n\\t},\\n}.ValidGet()\\n\\nvar XLN_MISSING_CURRENCY = XlnS{\\n\\tLANG_EN: `missing currency`,\\n\\tLANG_FR: `devise manquante`,\\n\\tLANG_ES: `falta moneda`,\\n}.ValidGet()\\n\\nvar XLN_CURRENCY_INVALID = Xln[func(currency string) string]{\\n\\tLANG_EN: func(currency string) string {\\n\\t\\treturn fmt.Sprintf(`%v doesn't appear to be a valid currency`, currency)\\n\\t},\\n\\tLANG_FR: func(currency string) string {\\n\\t\\treturn fmt.Sprintf(`%v ne semble pas être une devise valide`, currency)\\n\\t},\\n\\tLANG_ES: func(currency string) string {\\n\\t\\treturn fmt.Sprintf(`%v no parece ser una moneda válida`, currency)\\n\\t},\\n}.ValidGet()\\n\",\"name\":\"xln.go\"}]}"
      }
    },
    {"role": "user", "content": "Add Italian and Portuguese"}
  ],
  "functions": [
    {
      "name": "read_files",
      "description": "Request a list of files by providing a list of file names or paths.",
      "parameters": {
        "properties": {
          "paths": {
            "description": "List of file names or paths.",
            "items": {"description": "File name or path.", "type": "string"},
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    {
      "name": "write_files",
      "description": "Provide a list of files, with file names and contents.",
      "parameters": {
        "properties": {
          "files": {
            "description": "List of files, with file names and contents.",
            "items": {
              "description": "Individual file, with name and content.",
              "properties": {
                "body": {"description": "File content.", "type": "string"},
                "name": {"description": "File name.", "type": "string"}
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  ]
}
